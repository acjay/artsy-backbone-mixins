// Generated by CoffeeScript 1.6.3
(function() {
  var Backbone, _;

  _ = require('underscore');

  Backbone = require('backbone');

  module.exports = function(artsyUrl) {
    return {
      fetchUntilEnd: function(options) {
        var fetchPage, opts, page,
          _this = this;
        if (options == null) {
          options = {};
        }
        page = 0;
        opts = _.clone(options);
        fetchPage = function() {
          var _ref;
          return _this.fetch(_.extend(opts, {
            data: _.extend((_ref = opts.data) != null ? _ref : {}, {
              page: page += 1
            }),
            remove: false,
            success: function(col, res) {
              if (res.length === 0) {
                return typeof options.success === "function" ? options.success(_this) : void 0;
              } else {
                return fetchPage();
              }
            },
            error: options.error
          }));
        };
        return fetchPage();
      },
      fetchSetItemsByKey: function(key, options) {
        var _this = this;
        if (options == null) {
          options = {};
        }
        return new Backbone.Collection(null).fetch({
          url: "" + artsyUrl + "/api/v1/sets?key=" + key,
          cache: options.cache,
          success: function(sets) {
            if (!sets.length) {
              return options.success(_this);
            }
            return new Backbone.Collection(null).fetch({
              url: "" + artsyUrl + "/api/v1/set/" + (sets.first().get('id')) + "/items",
              cache: options.cache,
              success: function(col) {
                _this.reset(col.toJSON());
                return options.success(_this);
              },
              error: options.error
            });
          },
          error: options.error
        });
      }
    };
  };

}).call(this);
